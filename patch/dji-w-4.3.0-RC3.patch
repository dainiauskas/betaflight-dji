From 607fc95864248939d9bd5bb0719f5d0a470b2900 Mon Sep 17 00:00:00 2001
From: Dainius Matusevicius <dainiauskas@gmail.com>
Date: Mon, 14 Feb 2022 10:07:06 +0200
Subject: [PATCH] DJI Warning messages

---
 src/main/cli/settings.c     |  1 +
 src/main/msp/msp.c          |  9 +++++++++
 src/main/osd/osd.c          |  8 ++++++++
 src/main/osd/osd.h          |  2 ++
 src/main/osd/osd_elements.c | 12 ++++++++++++
 src/main/osd/osd_elements.h |  2 ++
 6 files changed, 34 insertions(+)

diff --git a/src/main/cli/settings.c b/src/main/cli/settings.c
index 84759d5f4..a5e9c0155 100644
--- a/src/main/cli/settings.c
+++ b/src/main/cli/settings.c
@@ -1328,6 +1328,7 @@ const clivalue_t valueTable[] = {
     { "osd_warn_rssi_dbm",          VAR_UINT32  | MASTER_VALUE | MODE_BITSET, .config.bitpos = OSD_WARNING_RSSI_DBM,         PG_OSD_CONFIG, offsetof(osdConfig_t, enabledWarnings)},
 #endif
     { "osd_warn_over_cap",          VAR_UINT32  | MASTER_VALUE | MODE_BITSET, .config.bitpos = OSD_WARNING_OVER_CAP,         PG_OSD_CONFIG, offsetof(osdConfig_t, enabledWarnings)},
+    { "osd_warn_dji",               VAR_UINT32  | MASTER_VALUE | MODE_BITSET, .config.bitpos = OSD_WARNING_DJI,              PG_OSD_CONFIG, offsetof(osdConfig_t, enabledWarnings)},
 
     { "osd_rssi_alarm",             VAR_UINT8  | MASTER_VALUE, .config.minmaxUnsigned = { 0, 100 }, PG_OSD_CONFIG, offsetof(osdConfig_t, rssi_alarm) },
 #ifdef USE_RX_LINK_QUALITY_INFO
diff --git a/src/main/msp/msp.c b/src/main/msp/msp.c
index 03c135fa1..aefb0dcac 100644
--- a/src/main/msp/msp.c
+++ b/src/main/msp/msp.c
@@ -1096,6 +1096,15 @@ static bool mspProcessOutCommand(int16_t cmdMSP, sbuf_t *dst)
 
     case MSP_NAME:
         {
+            #ifdef USE_OSD
+                // Show warning for DJI OSD instead of pilot name
+                // works if osd_warning_enabled is on, osd_warn_dji is on and usb is not connected
+                if (osdWarnDjiEnabled()) {
+                    sbufWriteString(dst, djiWarningBuffer);
+                    break;
+                }
+            #endif
+
             const int nameLen = strlen(pilotConfig()->name);
             for (int i = 0; i < nameLen; i++) {
                 sbufWriteU8(dst, pilotConfig()->name[i]);
diff --git a/src/main/osd/osd.c b/src/main/osd/osd.c
index 5b696fbe0..0579abee5 100644
--- a/src/main/osd/osd.c
+++ b/src/main/osd/osd.c
@@ -384,6 +384,9 @@ void pgResetFn_osdConfig(osdConfig_t *osdConfig)
     osdConfig->stat_show_cell_value = false;
     osdConfig->framerate_hz = OSD_FRAMERATE_DEFAULT_HZ;
     osdConfig->cms_background_type = DISPLAY_BACKGROUND_TRANSPARENT;
+
+    // Turn off replacing craft name for DJI OSD
+    osdWarnSetState(OSD_WARNING_DJI, false);
 }
 
 void pgResetFn_osdElementConfig(osdElementConfig_t *osdElementConfig)
@@ -408,6 +411,11 @@ void pgResetFn_osdElementConfig(osdElementConfig_t *osdElementConfig)
     osdElementConfig->item_pos[OSD_UP_DOWN_REFERENCE]  = OSD_POS(13, 6);
 }
 
+bool osdWarnDjiEnabled(void)
+{
+    return osdWarnGetState(OSD_WARNING_DJI);
+}
+
 static void osdDrawLogo(int x, int y)
 {
     // display logo and help
diff --git a/src/main/osd/osd.h b/src/main/osd/osd.h
index e807c5bdc..cd8f5b9e7 100644
--- a/src/main/osd/osd.h
+++ b/src/main/osd/osd.h
@@ -245,6 +245,7 @@ typedef enum {
     OSD_WARNING_LINK_QUALITY,
     OSD_WARNING_RSSI_DBM,
     OSD_WARNING_OVER_CAP,
+    OSD_WARNING_DJI,
     OSD_WARNING_COUNT // MUST BE LAST
 } osdWarningsFlags_e;
 
@@ -345,6 +346,7 @@ void osdUpdate(timeUs_t currentTimeUs);
 void osdStatSetState(uint8_t statIndex, bool enabled);
 bool osdStatGetState(uint8_t statIndex);
 void osdSuppressStats(bool flag);
+bool osdWarnDjiEnabled(void);
 void osdAnalyzeActiveElements(void);
 void changeOsdProfileIndex(uint8_t profileIndex);
 uint8_t getCurrentOsdProfileIndex(void);
diff --git a/src/main/osd/osd_elements.c b/src/main/osd/osd_elements.c
index 37a8dc141..28c36e02a 100644
--- a/src/main/osd/osd_elements.c
+++ b/src/main/osd/osd_elements.c
@@ -227,6 +227,8 @@ static uint32_t blinkBits[(OSD_ITEM_COUNT + 31) / 32];
 #define IS_BLINK(item) (blinkBits[(item) / 32] & (1 << ((item) % 32)))
 #define BLINK(item) (IS_BLINK(item) && blinkState)
 
+char djiWarningBuffer[12];
+
 enum {UP, DOWN};
 
 static int osdDisplayWrite(osdElementParms_t *element, uint8_t x, uint8_t y, uint8_t attr, const char *s)
@@ -1774,6 +1776,16 @@ static void osdDrawSingleElement(displayPort_t *osdDisplayPort, uint8_t item)
     osdElementDrawFunction[item](&element);
     if (element.drawElement) {
         osdDisplayWrite(&element, elemPosX, elemPosY, element.attr, buff);
+
+        // Save warning for DJI
+        if (item == OSD_WARNINGS && osdWarnDjiEnabled()) {
+            if (strlen(buff)) {
+                tfp_sprintf(djiWarningBuffer, buff);
+            } else {
+                // Set an empty string, because if the warning is NULL, DJI will display CRAFT_NAME
+                tfp_sprintf(djiWarningBuffer, "           ");
+            }
+        }
     }
 }
 
diff --git a/src/main/osd/osd_elements.h b/src/main/osd/osd_elements.h
index ec09dec52..af5fb67e2 100644
--- a/src/main/osd/osd_elements.h
+++ b/src/main/osd/osd_elements.h
@@ -44,6 +44,8 @@ typedef struct osdElementParms_s {
 
 typedef void (*osdElementDrawFn)(osdElementParms_t *element);
 
+extern char djiWarningBuffer[12];
+
 int osdConvertTemperatureToSelectedUnit(int tempInDegreesCelcius);
 void osdFormatDistanceString(char *result, int distance, char leadingSymbol);
 bool osdFormatRtcDateTime(char *buffer);
-- 
2.35.1

